version: '3.4'

services:

  modalmaisdb:
    container_name: mongodb
    image: mongo
    restart: always
    ports:
        - "27017:27017"
    volumes:
        - mongo_data:/data/db
    networks:
      - webproxy
  
  transacaodb:
    container_name: postgres
    image: postgres
    environment:
        - POSTGRES_USER=postgres
        - POSTGRES_PASSWORD=rootvaivoa
    restart: always
    ports:
        - "5432:5432"
    networks:
      - webproxy
    volumes:
        - postgres_data:/var/lib/postgresql/data/

  modalmais.api:
    container_name: ${DOCKER_REGISTRY-}Modalmais.API
    build:
      context: .
      dockerfile: src/Modalmais.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
    depends_on:
      - modalmaisdb
    ports:
      - "5201:80"
    networks:
      - webproxy

  modalmais.transacoes.api:
    container_name: ${DOCKER_REGISTRY-}modalmais.transacoes.api
    build:
      context: .
      dockerfile: src/Modalmais.Transacoes.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - "Api-StringBd-Postgres:Host=transacaodb;Database=modalmais;Username=postgres;Password=rootvaivoa"
    ports:
      - "5101:80"
    depends_on:
      - transacaodb
    networks:
      - webproxy

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    networks:
      - webproxy
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    networks:
      - webproxy
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    
  redis:
    image: redis
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - webproxy
    command: redis-server

  rebrow:
    image: marian/rebrow
    container_name: redis-rebrow
    ports:
      - "5001:5001"
    networks: 
      - webproxy
    depends_on:
      - redis

networks:
  webproxy:
    driver: bridge

volumes:
  mongo_data:
  postgres_data:
